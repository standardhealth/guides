/*! For license information please see f5eda52b.b3228ae8.js.LICENSE.txt */
(window.webpackJsonp=window.webpackJsonp||[]).push([[15],{112:function(e,t,i){"use strict";i.r(t),i.d(t,"useModalState",(function(){return bt})),i.d(t,"ModalPortal",(function(){return qt}));var a=i(0),r=i.n(a),n=i(34),o=i.n(n),d=i(176),s=i(373),l=i.n(s),c=i(130),u=(i(177),i(133)),p=i(107),m=i.n(p),h=i(128),f=i.n(h),g=i(225),v=i.n(g);const b=Object(c.styled)("div")`
  * {
    box-sizing: content-box;
  }
`;var y=function(e){return r.a.createElement(b,null,e.children)},q=i(528),_=i.n(q),T=i(235),E=i.n(T),x=i(108),w=i.n(x);const C=Object.freeze({required:"required",conditional:"conditional",derived:"derived",optional:"optional",extended:"extended"});var N=({type:e})=>{switch(e){case C.required:return r.a.createElement(E.a,{className:`${w.a.tag} ${w.a.required}`},"Required");case C.conditional:return r.a.createElement(E.a,{className:`${w.a.tag} ${w.a.conditional}`},"Conditional");case C.derived:return r.a.createElement(E.a,{className:`${w.a.tag} ${w.a.derived}`},"Derived");case C.optional:return r.a.createElement(E.a,{className:`${w.a.tag} ${w.a.optional}`},"Optional");case C.extended:return r.a.createElement(E.a,{className:`${w.a.tag} ${w.a.extended}`},"Extended");default:return null}},I=i(85),D=i.n(I),O=i(147),S=i.n(O);const A=({children:e,onToggle:t})=>r.a.createElement("div",{className:D.a.toggleMore,onClick:()=>{t()}},e);var k=({codeList:e=[],onToggle:t,isExpanded:i})=>{const a=e.map(e=>r.a.createElement("p",{key:e,className:D.a.fieldEnumValue},e));return r.a.createElement("div",{className:D.a.codeList},a.length<=5?r.a.createElement("div",null,a):i?r.a.createElement("div",null,a,r.a.createElement(A,{onToggle:t},"Show less",r.a.createElement(S.a,{name:"chevron_up",height:"8",width:"8",fill:"#7f55cc"}))):r.a.createElement("div",null,[...a.slice(0,5)],r.a.createElement(A,{onToggle:t},a.length-5," more",r.a.createElement(S.a,{name:"chevron_down",height:"8",width:"8",fill:"#7f55cc"}))))};const U=/\[\^?]?(?:[^\\\]]+|\\[\S\s]?)*]?|\\(?:0(?:[0-3][0-7]{0,2}|[4-7][0-7]?)?|[1-9][0-9]*|x[0-9A-Fa-f]{2}|u[0-9A-Fa-f]{4}|c[A-Za-z]|[\S\s]?)|\((?:\?[:=!]?)?|(?:[?*+]|\{[0-9]+(?:,[0-9]*)?\})\??|[^.?*+^${[()|\\]+|./g,L=/[^\\-]+|-|\\(?:[0-3][0-7]{0,2}|[4-7][0-7]?|x[0-9A-Fa-f]{2}|u[0-9A-Fa-f]{4}|c[A-Za-z]|[\S\s]?)/g,M=/^(\[\^?)(]?(?:[^\\\]]+|\\[\S\s]?)*)(]?)$/,R=/^(?:[?*+]|\{[0-9]+(?:,[0-9]*)?\})\??$/,$=0,j=1,P=2,V=3,F="Unclosed character class",z="Incomplete regex token",H="Reversed or invalid range",W="Invalid or unsupported group type",B="Unclosed grouping",Y="No matching opening parenthesis",G="Interval quantifier cannot use value over 65,535",Z="Interval quantifier range is reversed",J="Quantifiers must be preceded by a token that can be repeated",Q="Empty alternative effectively truncates the regex here";function X(e,t){return'<b class="err"'+(t?' title="'+t+'"':"")+">"+e+"</b>"}function K(e,t){return'<b class="g'+t+'">'+e+"</b>"}function ee(e){return e.replace(/&/g,"&amp;").replace(/</g,"&lt;").replace(/>/g,"&gt;")}function te(e){if(e.length>1&&"\\"===e.charAt(0)){var t=e.slice(1);if(/^c[A-Za-z]$/.test(t))return"ABCDEFGHIJKLMNOPQRSTUVWXYZ".indexOf(t.charAt(1).toUpperCase())+1;if(/^(?:x[0-9A-Fa-f]{2}|u[0-9A-Fa-f]{4})$/.test(t))return parseInt(t.slice(1),16);if(/^(?:[0-3][0-7]{0,2}|[4-7][0-7]?)$/.test(t))return parseInt(t,8);if(1===t.length&&"cuxDdSsWw".indexOf(t)>-1)return NaN;if(1===t.length)switch(t){case"b":return 8;case"f":return 12;case"n":return 10;case"r":return 13;case"t":return 9;case"v":return 11;default:return t.charCodeAt(0)}}return"\\"!==e?e.charCodeAt(0):NaN}function ie(e){var t,i,a="",r=M.exec(e),n={rangeable:!1,type:$};for(a+=(r={opening:r[1],content:r[2],closing:r[3]}).closing?r.opening:X(r.opening,F);t=L.exec(r.content);)if("\\"===(i=t[0]).charAt(0))/^\\[cux]$/.test(i)?(a+=X(i,z),n={rangeable:n.type!==j}):/^\\[dsw]$/i.test(i)?(a+="<b>"+i+"</b>",n={rangeable:n.type!==j,type:P}):"\\"===i?a+=X(i,z):(a+="<b>"+ee(i)+"</b>",n={rangeable:n.type!==j,charCode:te(i)});else if("-"===i)if(n.rangeable){var o=L.lastIndex,d=L.exec(r.content);if(d){var s=te(d[0]);!isNaN(s)&&n.charCode>s||n.type===P||/^\\[dsw]$/i.test(d[0])?a+=X("-",H):a+="<u>-</u>",n={rangeable:!1,type:j}}else r.closing?a+="-":a+="<u>-</u>";L.lastIndex=o}else a+="-",n={rangeable:n.type!==j};else a+=ee(i),n={rangeable:i.length>1||n.type!==j,charCode:i.charCodeAt(i.length-1)};return a+r.closing}var ae=({regex:e})=>r.a.createElement("div",{className:"regex",dangerouslySetInnerHTML:{__html:(e=>{if("undefined"!=typeof window&&"undefined"!=typeof document){for(var t,i,a,r,n="",o=0,d=0,s=[],l={quantifiable:!1,type:$};t=U.exec(e);)if(a=(i=t[0]).charAt(0),r=i.charAt(1),"["===a)n+="<i>"+ie(i)+"</i>",l={quantifiable:!0};else if("("===a)2===i.length?n+=X(i,W):(1===i.length&&o++,d=5===d?1:d+1,s.push({index:n.length+'<b class="gN">'.length,opening:i}),n+=K(i,d)),l={quantifiable:!1};else if(")"===a)s.length?(n+=K(")",d),l={quantifiable:!/^[=!]/.test(s[s.length-1].opening.charAt(2)),style:"g"+d},d=1===d?5:d-1,s.pop()):(n+=X(")",Y),l={quantifiable:!1});else if("\\"===a)if(/^[1-9]/.test(r)){for(var c="",u=+i.slice(1);u>o;)c=/[0-9]$/.exec(u)[0]+c,u=Math.floor(u/10);if(u>0)n+="<b>\\"+u+"</b>"+c;else{var p=/^\\([0-3][0-7]{0,2}|[4-7][0-7]?|[89])([0-9]*)/.exec(i);n+="<b>\\"+p[1]+"</b>"+p[2]}l={quantifiable:!0}}else/^[0bBcdDfnrsStuvwWx]/.test(r)?/^\\[cux]$/.test(i)?(n+=X(i,z),l={quantifiable:!1}):"bB".indexOf(r)>-1?(n+="<b>"+i+"</b>",l={quantifiable:!1}):(n+="<b>"+i+"</b>",l={quantifiable:!0}):"\\"===i?n+=X(i,z):(n+=ee(i),l={quantifiable:!0});else if(R.test(i)){if(l.quantifiable){var m=/^\{([0-9]+)(?:,([0-9]*))?/.exec(i);m&&(+m[1]>65535||m[2]&&+m[2]>65535)?n+=X(i,G):m&&m[2]&&+m[1]>+m[2]?n+=X(i,Z):n+=(l.style?'<b class="'+l.style+'">':"<b>")+i+"</b>"}else n+=X(i,J);l={quantifiable:!1}}else"|"===i?(l.type===$||l.type===V&&!s.length?n+=X(i,Q):n+=s.length?K("|",d):"<b>|</b>",l={quantifiable:!1,type:V}):"^"===i||"$"===i?(n+="<b>"+i+"</b>",l={quantifiable:!1}):"."===i?(n+="<b>.</b>",l={quantifiable:!0}):(n+=ee(i),l={quantifiable:!0});var h,f,g=0;for(f=0;f<s.length;f++)h=s[f].index+g,n=n.slice(0,h)+X(s[f].opening,B)+n.slice(h+s[f].opening.length),g+=X("",B).length;return n}})(e)}});var re=({regex:e,examples:t=[]})=>r.a.createElement("div",{className:D.a.regexRestriction},r.a.createElement("div",null,"Values must meet the regular expression"),r.a.createElement(ae,{regex:e}),t.length>0?r.a.createElement("div",null,r.a.createElement("br",null),r.a.createElement("div",null,"Examples:"),r.a.createElement("div",null,t.map((i,a)=>{const n=encodeURIComponent(e),o=encodeURIComponent(i);return r.a.createElement("a",{href:`http://www.regexplanet.com/advanced/xregexp/index.html?regex=${n}&input=${o}`,target:"_blank",key:a},`${i}${a<t.length-1?", ":""}`)}))):null),ne=i(298),oe=i.n(ne),de=i(1);const se=({children:e,...t})=>r.a.createElement(f.a,Object(de.a)({variant:"data",component:"div",color:"#000"},t),e),le=({children:e,...t})=>r.a.createElement(f.a,Object(de.a)({variant:"subtitle",color:"#151c3d"},t),e);var ce=i(300),ue=i.n(ce),pe=i(354),me=i(250),he=i.n(me),fe=i(109),ge=i.n(fe);var ve=({codes:e})=>r.a.createElement("div",null,e.map(e=>r.a.createElement("div",{style:{marginBottom:"10px"}},r.a.createElement(pe.a,Object(de.a)({},pe.b,{code:e,language:"js",theme:he.a}),({className:e,style:t,tokens:i,getLineProps:a,getTokenProps:n})=>r.a.createElement("pre",{className:`${e} ${ge.a.code}`,style:t},i.map((e,t)=>r.a.createElement("div",a({line:e,key:t}),e.map((e,t)=>r.a.createElement("span",n({token:e,key:t}))))))))));var be=({field:e,scripts:t,onCloseClick:i})=>r.a.createElement(ue.a,{title:r.a.createElement(f.a,{variant:"subtitle"},"Field Script Restriction for: ",r.a.createElement("span",{style:{fontWeight:600}},e)),onCancelClick:i,onCloseClick:i,actionVisible:!1,buttonSize:"sm"},r.a.createElement(ve,{codes:t})),ye=i(169),qe=i.n(ye);const _e=Object(c.styled)("div")`
  margin-bottom: 15px;
`,Te=Object(c.styled)("div")`
  display: flex;
  flex-direction: column;
  align-items: flex-start;

  div {
    display: inline;
    :not(:first-child) {
      margin-top: 5px;
    }
  }
`,Ee=({name:e})=>{const t=oe()(e);return r.a.createElement(le,null,t," (",e,")")},xe=({name:e,description:t})=>r.a.createElement("div",{className:D.a.fieldDescription},r.a.createElement("div",{className:D.a.name},e),r.a.createElement("div",null,t)),we=({fieldCount:e})=>r.a.createElement(E.a,{className:`${D.a.tag} ${D.a.fields}`,style:{marginTop:"3px"}},`${e} Field${e>1?"s":""}`);var Ce=({schema:e,menuItem:t,isLatestSchema:i})=>{if(void 0===e)return null;const n=Object(u.a)(),{siteConfig:{customFields:{GATEWAY_API_ROOT:o=""}}}=n,d=Object(a.useMemo)(()=>e.fields.reduce((e,t)=>(e[t.name]=!1,e),{}),[e]),[s,l]=Object(a.useState)(d);Object(a.useEffect)(()=>{l(d)},[e]);const c=e=>()=>l({...s,[e]:!s[e]}),p=e=>s[e],[m,h]=r.a.useState(null),f=({original:{notes:e}})=>r.a.createElement("div",null,e&&r.a.createElement(_e,null,e)),g=[{Header:"Field & Description",id:"fieldDescription",Cell:({original:{name:e,description:t}})=>r.a.createElement(xe,{name:e,description:t}),style:{whiteSpace:"normal",wordWrap:"break-word",padding:"8px"}},{Header:"Required?",id:"attributes",Cell:({original:e})=>{const t=qe()(e,"required","optional");return r.a.createElement(Te,null,"required"==t&&r.a.createElement(N,{type:C.required}),"optional"==t&&r.a.createElement(N,{type:C.optional}),"conditional"==t&&r.a.createElement(N,{type:C.conditional}),"derived"==t&&r.a.createElement(N,{type:C.derived}),"extended"==t&&r.a.createElement(N,{type:C.extended}))},style:{padding:"8px"},width:96},{Header:"Type",id:"valueType",accessor:({valueType:e})=>(e=>{switch(e){case"number":return"QUANTITY";case"string":return"TEXT";case"coded":return"CODE";default:return e.toUpperCase()}})(e),style:{padding:"8px"},width:70},{Header:"Permissible Values",id:"permissibleValues",accessor:"permissible",Cell:({original:e})=>{const{name:t,permissible:i={},examples:a}=e,{regex:n=null,codeList:o=null}=i,d=a&&a.split(",");return n?r.a.createElement(re,{regex:n,examples:d}):o?r.a.createElement(k,{codeList:o,onToggle:c(t),isExpanded:p(t)}):null},style:{whiteSpace:"normal",wordWrap:"break-word",padding:"8px"}},{Header:"Notes",Cell:f,style:{whiteSpace:"normal",wordWrap:"break-word",padding:"8px"}}],v=[{Header:"COVID-Related Patterns and Codes",id:"fieldDescription",Cell:({original:{name:e,description:t}})=>r.a.createElement(xe,{name:e,description:t}),style:{whiteSpace:"normal",wordWrap:"break-word",padding:"8px"}},{Header:"Code",id:"keyCode",accessor:"keyCode",Cell:({original:e})=>{const{name:t,keyCode:i={},examples:a}=e,{regex:n=null,codeList:o=null}=i;return n?r.a.createElement(re,{regex:n,examples:examplesplit}):o?r.a.createElement(k,{codeList:o,onToggle:c(t),isExpanded:p(t)}):null},style:{whiteSpace:"normal",wordWrap:"break-word",padding:"8px"}},{Header:"Result Codes or Units",id:"permissibleValues",accessor:"permissible",Cell:({original:e})=>{const{name:t,permissible:i={},examples:a}=e,{regex:n=null,codeList:o=null}=i,d=a&&a.split(",");return n?r.a.createElement(re,{regex:n,examples:d}):o?r.a.createElement(k,{codeList:o,onToggle:c(t),isExpanded:p(t)}):null},style:{whiteSpace:"normal",wordWrap:"break-word",padding:"8px"}},{Header:"Notes",Cell:f,style:{whiteSpace:"normal",wordWrap:"break-word",padding:"8px"}}],b=r.a.createRef();return r.a.createElement("div",{ref:t.contentRef,"data-menu-title":t.name,className:D.a.schema},m&&r.a.createElement(qt,null,r.a.createElement(be,{field:m.fieldName,scripts:m.content,onCloseClick:()=>{h(null)}})),r.a.createElement("div",{style:{display:"flex",flexDirection:"row",alignItems:"center",marginBottom:"11px"}},r.a.createElement(Ee,{name:e.name}),r.a.createElement(we,{fieldCount:e.fields.length})),r.a.createElement("div",{style:{marginBottom:"11px",display:"flex",flexDirection:"row",justifyContent:"space-between",alignItems:"flex-start"}},r.a.createElement(se,{style:{flex:1}},e&&e.description,r.a.createElement("div",null))),r.a.createElement("div",{ref:b},r.a.createElement(_.a,{parentRef:b,columns:g,data:e.fields,showPagination:!1,defaultPageSize:e.fields.length,sortable:!0,cellAlignment:"top",withOutsideBorder:!0}),e.profiles&&e.profiles.length>0?r.a.createElement(_.a,{parentRef:b,columns:v,data:e.profiles,showPagination:!1,defaultPageSize:e.profiles.length,sortable:!0,cellAlignment:"top",withOutsideBorder:!0}):r.a.createElement("p",null,"No COVID 19-specific patterns defined.")))},Ne=(i(604),i(110)),Ie=i.n(Ne),De=i(234),Oe=i.n(De);const Se=[{content:"All",value:"no_active_filter"}],Ae=Object(c.styled)(v.a)`
  min-width: 190px;
`;var ke=({files:e=0,fields:t=0,dataTiers:i=[],dataAttributes:a=[],searchParams:n={},onSearch:o=(e=>console.log(e.target.val))})=>{const[d,s]=r.a.useState("");Oe()(o,500);return r.a.createElement(f.a,{variant:"data",color:"#151c3d"},r.a.createElement("div",{className:Ie.a.fileFilters},`${e} files > ${t} fields`,r.a.createElement("div",{className:Ie.a.dataSelectors},"Filter required:"," ",r.a.createElement(Ae,{options:a,value:n.attribute,onChange:(l="attribute",e=>o({...n,[l]:e})),size:"sm"}))));var l},Ue=i(153),Le=i(356),Me=i(607);var Re=({children:e,minZoom:t=.25,maxZoom:i=1,zoomStep:a=.05,menu:n})=>{const o=Object(Ue.useTheme)(),[d,s]=r.a.useState(1);return r.a.createElement("div",{className:Le.a`
        border: solid 1px ${o.colors.grey_2};
        transform: scale(1);
        overflow: hidden;
      `},r.a.createElement(Me.b,{defaultScale:1,defaultPositionX:0,defaultPositionY:0,doubleClick:{disabled:!0},options:{minScale:t,maxScale:i,limitToBounds:!1,limitToWrapper:!1},onWheel:({scale:e})=>{s(e)},wheel:{step:200}},({resetTransform:o,setScale:l})=>{const c=Oe()(e=>{l(e)},500);return r.a.createElement(r.a.Fragment,null,r.a.createElement("div",{className:"tools",style:{position:"absolute",zIndex:1,display:"flex"}},r.a.createElement("input",{type:"range",min:t,max:i,step:a,value:d,onChange:e=>{const t=Number(e.target.value);s(t),c(t)}}),r.a.createElement("button",{onClick:()=>{s(1),setTimeout(()=>{o()},0)}},"reset")),r.a.createElement(Me.a,null,e),r.a.createElement("div",null,n({resetTransform:o})))}))},$e=i(220);const je=Object($e.default)("li")`
  flex: auto;
  text-align: center;
  list-style-type: none;
  position: relative;

  display: flex;
  flex-direction: row;
  padding-top: var(--tree-node-padding);
  padding-right: var(--tree-line-height);
  padding-bottom: 0;
  padding-left: calc(var(--tree-line-height) + var(--arrow-width));
  margin-top: 0px;

  /* line cont */
  ::before,
  ::after {
    content: '';
    position: absolute;
    left: 0;
    width: var(--tree-line-height);
    height: 100%;
  }

  /* vertical line */
  ::before {
    border-left: var(--tree-line-width) solid var(--tree-line-color);
  }

  /* horizontal line */
  ::after {
    top: 100%;
    transform: translateY(-50%);
    border-top: var(--tree-line-width) solid var(--tree-line-color);
  }

  /* single child node - no line */
  :only-child {
    padding: 0;
    padding-left: var(--arrow-width);
    ::after,
    :before {
      display: none;
    }
  }

  /* top curve */
  :first-of-type {
    ::before {
      bottom: -50%;
      border-radius: var(--tree-line-border-radius) 0 0 0;
    }
    ::after {
      border-radius: var(--tree-line-border-radius) 0 0 0;
    }
  }

  /* bottom curve */
  :last-of-type {
    ::before {
      border-radius: 0 0 0 var(--tree-line-border-radius);
      top: -50%;
    }
    ::after {
      top: 0;
      border: 0 none;
      border-bottom: var(--tree-line-width) solid var(--tree-line-color);
      border-radius: 0 0 0 var(--tree-line-border-radius);
    }
  }

  /* arrow */
  /* first node*/
  .arrow {
    display: none;
  }
  .ChildrenContainer .arrow {
    display: block;
    width: 20px;
    position: absolute;
    width: 0;
    height: 0;
    top: 50%;
    border-style: solid;
    border-width: 7px 0 7px 9px;
    border-color: transparent transparent transparent var(--tree-line-color);
    transform: translate(-9px, -50%);
    z-index: 2;
  }
`,Pe=Object($e.default)("ul")`
  display: flex;
  padding-inline-start: 0;
  padding-top: var(--tree-line-height);
  position: relative;

  flex-direction: column;
  padding-left: calc(var(--tree-line-height));
  padding-top: 0px;
  margin: 0px;
  ::before {
    content: '';
    position: absolute;
    top: 50%;
    left: 0;
    width: 0;
    border-top: var(--tree-line-width) solid var(--tree-line-color);
    width: var(--tree-line-height);
    transform: translateY(-50%);
  }
`;var Ve=function({children:e,label:t,className:i=""}){return a.createElement(je,{className:`NodeContainer ${i}`},a.createElement("div",{className:"arrow"}),t,a.Children.count(e)>0&&a.createElement(Pe,{className:"ChildrenContainer"},e))};const Fe=Object($e.default)("ul")`
  padding-inline-start: 0;
  margin: 0;
`,ze=Object($e.default)(Fe)`
  --line-height: ${({lineHeight:e})=>e};
  --line-width: ${({lineWidth:e})=>e};
  --line-color: ${({lineColor:e})=>e};
  --line-border-radius: ${({lineBorderRadius:e})=>e};
  --node-padding: ${({nodePadding:e})=>e};
  --tree-line-height: var(--line-height, 20px);
  --tree-line-width: var(--line-width, 1px);
  --tree-line-color: var(--line-color, black);
  --tree-line-border-radius: var(--line-border-radius, 5px);
  --tree-node-padding: var(--node-padding, 5px);
  --arrow-width: 9px;
`,He=a.forwardRef(({children:e,label:t,...i},r)=>a.createElement(ze,Object(de.a)({},i,{ref:r}),a.createElement(Ve,{label:t},e)));var We=a.memo(He);const Be=r.a.createContext(""),Ye=({expanded:e=!1,onClick:t})=>{const i=Object(Ue.useTheme)();return r.a.createElement("button",{onClick:t,className:Le.a`
        width: 12px;
        height: 12px;
        padding: 0px;
        line-height: 0px;
        display: flex;
        justify-content: center;
        align-items: center;
        border-radius: 50%;
        background-color: ${i.colors.white};
        cursor: pointer;
        border: none;
      `},e?"-":"+")},Ge=({fileName:e,required:t=!1,fields:i,onExpandStateChange:a})=>{const n=Object(Ue.useTheme)(),o=r.a.useContext(Be),[d,s]=r.a.useState(!1),l=r.a.useMemo(()=>i.filter(e=>"required"==e.required).map(e=>({...e,isMatch:e.name.includes(o)})),[o]),u=r.a.useMemo(()=>i.filter(e=>"optional"==e.required).map(e=>({...e,isMatch:e.name.includes(o)})),[o]),p=r.a.useMemo(()=>i.filter(e=>"conditional"==e.required).map(e=>({...e,isMatch:e.name.includes(o)})),[o]),m=e=>e.isMatch,h=r.a.useMemo(()=>l.some(m)||u.some(m),[o]),g=r.a.useRef(!0);r.a.useEffect(()=>{g.current||s(!!h),g.current=!1},[o]);const v=Object(c.styled)("li")`
    list-style-position: inside;
    word-wrap: break-word;
    list-style-type: disc;
  `,b=Object(c.styled)("ul")`
    padding-left: 10px;
  `,y=tt();return r.a.useEffect(()=>{const e=({expanded:e})=>{s(e)};return y.subscribe(e),()=>y.unsubscribe(e)},[]),r.a.createElement("div",{className:Le.a`
        display: flex;
        flex-direction: column;
        justify-content: center;
        opacity: ${h?1:.25};
        margin: 10px 0px;
      `},r.a.createElement("div",{className:Le.a`
          border-radius: 10px;
          border: solid 2px ${t?n.colors.error:n.colors.secondary};
          background: ${n.colors.white};
          width: 260px;   // width of 
          padding: 2px;
        `},r.a.createElement("div",{className:Le.a`
            display: flex;
            justify-content: space-between;
            align-items: center;
          `},r.a.createElement(f.a,{variant:"data",color:"secondary",bold:!0,className:Le.a`
              margin-left: 5px;
            `},e),r.a.createElement(E.a,{className:Le.a`
              background: ${n.colors.primary_1};
              display: flex;
              cursor: pointer;
            `,onClick:e=>{s(!d),a(!d)}},r.a.createElement("div",null,o&&o.length?`${l.filter(m).length+u.filter(m).length+p.filter(m).length} / ${i.length}`:l.length+u.length+p.length," ","fields"),r.a.createElement("div",{className:Le.a`
                margin-left: 5px;
              `},r.a.createElement(Ye,{expanded:d})))),d&&r.a.createElement("div",{className:Le.a`
              text-align: left;
            `},!!l.length&&r.a.createElement(f.a,{color:"error",bold:!0},"Required (",l.length," fields)"),r.a.createElement(b,null,l.map(e=>r.a.createElement(v,{key:e.name},r.a.createElement(f.a,{variant:"data",color:e.isMatch?"black":"grey_2"},e.name)))),!!u.length&&r.a.createElement(f.a,{color:"secondary_dark",bold:!0},"Optional (",u.length," fields)"),r.a.createElement(b,null,u.map(e=>r.a.createElement(v,{key:e.name},r.a.createElement(f.a,{variant:"data",color:e.isMatch?"black":"grey_2"},e.name)))),!!p.length&&r.a.createElement(f.a,{color:"orange",bold:!0},"Conditional (",p.length," fields)"),r.a.createElement(b,null,p.map(e=>r.a.createElement(v,{key:e.name},r.a.createElement(f.a,{variant:"data",color:e.isMatch?"black":"grey_2"},e.name)))))))},Ze=({fileDef:e,onExpandStateChange:t})=>{const i=({fileName:e,required:i,children:a,fields:n})=>r.a.createElement(Ve,{label:r.a.createElement(Ge,{fileName:e,required:i,fields:n,onExpandStateChange:t})},a);return r.a.createElement(i,{fileName:e.name,fields:e.fields,required:e.required},e.children.map(e=>r.a.createElement(Ze,{fileDef:e,key:e.name,onExpandStateChange:t})))};var Je=r.a.forwardRef(({searchString:e,rootFile:t,onNodeExpand:i},a)=>{const n=Object(Ue.useTheme)(),o=e=>t=>{i({fileName:e,expanded:t})},d=()=>r.a.createElement(Ge,{fileName:t.name,fields:t.fields,onExpandStateChange:o(t.name),required:!0});return r.a.createElement(Be.Provider,{value:e},r.a.createElement(We,{ref:a,label:r.a.createElement(d,null),lineHeight:"40px",lineWidth:"4px",lineBorderRadius:"25px",lineColor:n.colors.grey_1,nodePadding:"2px"},t.children.map(e=>r.a.createElement(Ze,{fileDef:e,key:e.name,onExpandStateChange:o(e.name)}))))}),Qe=i(118),Xe=i(303),Ke=i.n(Xe);const et=r.a.createContext(),tt=()=>r.a.useContext(et);var it=({data:e,searchValue:t})=>{const i=Object(Ue.useTheme)(),a=r.a.createRef(),n=(()=>{let e=[];return{subscribe:t=>e=e.concat(t),unsubscribe:t=>e=e.filter(e=>{}),listeners:e,publish:t=>{e.forEach(e=>{e(t)})}}})(),o=()=>{n.publish({expanded:!0})};return r.a.createElement("div",{style:{display:"flex",cursor:"grab",position:"relative"},ref:a},r.a.createElement(Qe.Global,{styles:Qe.css`
          .dict_src-pages-dictionary- {
            /* experimental css properties */
            width: -webkit-fill-available;
            width: -moz-available;
            width: stretch;
            height: -webkit-fill-available;
            height: -moz-available;
            height: stretch;
          }
        `}),r.a.createElement(Re,{menu:({resetTransform:e})=>r.a.createElement("div",{style:{border:`solid 1px ${i.colors.grey_2}`,position:"absolute",cursor:"default",background:i.colors.white,padding:8,right:8,top:8}},r.a.createElement(f.a,{color:"primary"},"Filter by Data Tier"),r.a.createElement(Ke.a,{variant:"secondary",onClick:()=>(e=>{e(),n.publish({expanded:!1})})(e)},"Collapse All"),r.a.createElement(Ke.a,{variant:"secondary",onClick:o},"Expand All"))},r.a.createElement("div",{style:{height:800,width:2e3,display:"flex",alignItems:"center"}},r.a.createElement(et.Provider,{value:n},r.a.createElement(Je,{searchString:t,rootFile:e,onNodeExpand:({fileName:e,expanded:t})=>{console.log(e,t)}})))))},at=i(608),rt=i(711),nt=i.n(rt);const ot=(e,t)=>{const[i,a]=r.a.useState("");return r.a.useEffect(()=>{const i=i=>{const r=(()=>{const i=e.find(e=>{if(e&&e.current){const{top:i}=e.current.getBoundingClientRect();if(i>=0&&i<=t)return e.current}});return i?i.current:null})();if(r){const e=r.dataset.menuTitle;a(e)}};return document.addEventListener("scroll",i),()=>document.removeEventListener("scroll",i)},[e]),i};var dt=({contents:e,scrollYOffset:t,...i})=>{const a=e.map(e=>e.contentRef),n=ot(a,t),o=e.map(e=>e.name===n?{...e,active:!0}:e);return r.a.createElement(nt.a,Object(de.a)({contents:o,scrollYOffset:t},i))},st=i(712),lt=i.n(st);i(285);const ct=({children:e,visible:t})=>r.a.createElement("div",{style:{display:t?"block":"none"}},e),ut=i(746);var pt=i(747),mt=i.n(pt),ht=i(756),ft=i.n(ht),gt=i(758),vt=i.n(gt);const bt=()=>{const[e,t]=Object(a.useState)(!1);return[e,e=>{t(e);const i=document.getElementsByTagName("html")[0].classList;e?i.add("modal-open"):i.remove("modal-open")}]},yt=r.a.createRef(),qt=({children:e})=>{const t=yt.current;return t?o.a.createPortal(r.a.createElement("div",{style:{width:"100vw",height:"100vh"}},r.a.createElement(ue.a.Overlay,null,e)),t):null},_t=i(761),Tt=i(762);const Et=({schemas:e,menuContents:t,isLatestSchema:i})=>e.length>0?e.map(e=>{const a=lt()(t,{name:oe()(e.name)});return r.a.createElement(Ce,{schema:e,menuItem:a,isLatestSchema:i})}):r.a.createElement("div",null,"No schemas found");t.default=function(){const[e,t]=Object(a.useState)(_t.currentVersion),[i,n]=Object(a.useState)(_t.dictionary),[o,s]=Object(a.useState)(Tt),[p,h]=Object(a.useState)({tier:"",attribute:""}),[g,b]=Object(a.useState)(""),q=async e=>{try{const{dict:i,tree:a}=await async function(e){try{const t=await l.a.get(`/data/schemas/${e}.json`),i=await l.a.get(`/data/schemas/${e}_tree.json`);return{dict:t.data,tree:i.data}}catch(t){throw t}}(e);t(e),n(i),s(a)}catch(i){alert("DICTIONARY FETCHING ERROR - TODO: MAKE THIS A TOASTER")}},_=Object(u.a)(),{siteConfig:{customFields:{PLATFORM_UI_ROOT:T="",GATEWAY_API_ROOT:E=""}}}=_,x=r.a.useMemo(()=>{const e=qe()(i,"schemas",[]).map(e=>e.fields),t=vt()(e).reduce((e,t)=>{qe()(t,"required",!1);return e.attributes.push(C.required),e.attributes.push(C.conditional),e.attributes.push(C.optional),e.tiers.push(C.extended),e},{tiers:[],attributes:[]});return{tiers:mt()(t.tiers),attributes:mt()(t.attributes)}},[i]),w=r.a.useMemo(()=>i.schemas.map(e=>{const{tier:t,attribute:i}=p,a=e.fields.filter(e=>{const t=qe()(e,"required","optional");let a=!1;return"no_active_filter"===i||((i===C.conditional&&"conditional"==t||i===C.required&&"required"==t||i===C.optional&&"optional"==t||""===i||"no_active_filter"===i)&&(a=!0),a)});return{...e,fields:a}}).filter(e=>e.fields.length>0),[p,i]),N=w.length,I=w.reduce((e,t)=>e+t.fields.length,0),D=(e=>{const t=e.map(e=>e.name);return i.schemas.map(e=>({key:e.name,name:oe()(e.name),contentRef:Object(a.createRef)(),active:!1,disabled:!t.includes(e.name)}))})(w),O=ut.sort().slice(-1)[0]===e,S=Object.freeze({OVERVIEW:"OVERVIEW",DETAILS:"DETAILS"}),[A,k]=r.a.useState(S.OVERVIEW),U=Object(c.styled)(ht.Tab)`
    border: 0 none;
    position: relative;

    &.active {
      border: 0 none;

      ::after {
        content: '';
        border-bottom: 2px solid #00c79d;
        position: absolute;
        bottom: -2px;
        left: 50%;
        width: 80%;
        margin-left: -40%;
      }
    }
  `;return r.a.createElement(c.ThemeProvider,null,r.a.createElement("div",{id:"modalCont",className:m.a.modalCont,ref:yt}),r.a.createElement(d.a,{permalink:"dictionary"},r.a.createElement(y,null,r.a.createElement("div",{className:m.a.mainContainer},r.a.createElement("div",{className:m.a.dict},r.a.createElement("div",{className:m.a.heading},r.a.createElement(f.a,{color:"#151c3d",css:{fontSize:"28px",display:"inline-block",marginRight:"55px",flexShrink:0},as:"h1"},"Data Dictionary"),r.a.createElement(f.a,{variant:"paragraph",color:"#000"},"The C19HCC Data Dictionary expresses the details of the data model, which adheres to specific formats and restrictions to ensure a standard of data quality. The following list describes the attributes and permissible values for all of the classes in the dictionary.")),r.a.createElement("div",{className:m.a.infobar},r.a.createElement("div",null,r.a.createElement("form",null,r.a.createElement("div",{style:{width:"150px",marginRight:"10px"}},r.a.createElement(v.a,{"aria-label":"version-select",value:e,options:_t.versions.map(e=>({content:`Version ${e}`,value:e})),onChange:e=>q(e)}))),r.a.createElement("span",null,r.a.createElement(f.a,{variant:"data"},"Last updated: "),r.a.createElement(f.a,{variant:"data",bold:!0},Object(at.format)(qe()(i,"updatedAt",""),"MMMM D, YYYY")))),r.a.createElement(ft.a,{value:A,onChange:(e,t)=>{k(t)},styles:{marginBottom:"-2px"}},r.a.createElement(U,{value:S.OVERVIEW,label:"Overview"}),r.a.createElement(U,{value:S.DETAILS,label:"Details"})),r.a.createElement("div",null)),r.a.createElement(ke,{files:N,fields:I,dataTiers:Se.concat(x.tiers.map(e=>({content:oe()(e),value:e}))),dataAttributes:Se.concat(x.attributes.map(e=>({content:oe()(e),value:e}))),searchParams:p,onSearch:e=>h(e)}),r.a.createElement(ct,{visible:A===S.DETAILS},r.a.createElement(Et,{schemas:w,menuContents:D,isLatestSchema:O})),r.a.createElement(ct,{visible:A===S.OVERVIEW},r.a.createElement(it,{searchValue:g,data:o}))),r.a.createElement(ct,{visible:!0},r.a.createElement("div",{className:m.a.menu},r.a.createElement(dt,{title:"Clinical Files",contents:D,color:"#0774d3",scrollYOffset:"70",dataTiers:x.tiers.map(e=>({content:oe()(e),value:e})),dataAttributes:x.attributes.map(e=>({content:oe()(e),value:e}))})))))))}},746:function(e){e.exports=JSON.parse('["2.62","2.6","2.40"]')},761:function(e){e.exports=JSON.parse('{"dictionary":{"name":"COVID Data Dictionary","version":"2.40","schemas":[{"name":"root","description":"Metadata applicable to all data elements.","fields":[{"name":"reported_date","valueType":"date","description":"The date or date-time the observation is reported."},{"name":"reporter_organization_id","valueType":"ID","description":"The identifier of the organization reporting.","note":"Either the reporting organization or the practitioner should be provided."},{"name":"reporter_practitioner_id","valueType":"ID","description":"The identifier of the practitioner reporting.","note":"Either the reporting organization or the practitioner should be provided."}]},{"name":"patient","description":"The collection of data elements with demographic information about a patient.","parent":"root","fields":[{"name":"patient_id","valueType":"ID","description":"Unique identifier assigned to the patient.","required":"required"},{"name":"date_of_birth","description":"The actual or approximate date of birth.","required":"optional","valueType":"date"},{"name":"administrative_gender","description":"Administrative Gender - the gender that the patient is considered to have for administration and record keeping purposes.","required":"required","valueType":"code","permissible":{"codeList":["Male","Female","Other","Unknown"]},"notes":"Codes must align with FHIR Administrative Gender value set (http://hl7.org/fhir/ValueSet/administrative-gender)"},{"name":"race","description":"Concepts classifying the person into a named category of humans sharing common history, traits, geographical origin or nationality. The race codes used to represent these concepts are based upon the CDC Race and Ethnicity Code Set Version 1.0.","valueType":"code","required":"optional","permissible":{"codeList":["American Indian or Alaska Native","Asian","Black or African American","Native Hawaiian or Other Pacific Islander","White","Unknown","Asked but no answer"]},"notes":"Codes from http://hl7.org/fhir/us/core/ValueSet/omb-race-category"},{"name":"ethnicity","description":"Concepts classifying the person into a named category of humans sharing common history, traits, geographical origin or nationality. The ethnicity codes used to represent these concepts are based upon the CDC Race and Ethnicity Code Set Version 1.0.","valueType":"code","required":"optional","permissible":{"codeList":["Hispanic or Latino","Non Hispanic or Latino"]},"notes":"Codes from http://hl7.org/fhir/us/core/ValueSet/omb-ethnicity-category"},{"name":"zip_code","description":"Zip code of the primary residence of the patient.","valueType":"string","required":"required","permissible":{"regex":"(^\\\\d{5}$)|(^\\\\d{9}$)|(^\\\\d{5}-\\\\d{4}$)"},"notes":"Five digit zip code is acceptable."}]},{"name":"Vital_status","description":"An indicator of whether the patient is alive or dead.","parent":"patient","fields":[{"name":"patient_id","valueType":"ID","description":"Unique identifier of the patient.","required":"required"},{"name":"vital_status","description":"Donor\'s last known state of living or deceased.","valueType":"code","required":"required","permissible":{"codeList":["Alive","Deceased","Unknown"]}},{"name":"cause_of_death","description":"Indicates the cause of a patient\'s death.","valueType":"code","required":"conditional","permissible":{"codeList":["ICD-10 Code","SNOMED-CT code"]},"notes":"Cause of death is only required to be submitted if the patient is deceased. Mortality coding of COVID-19 with ICD-10 see: https://www.who.int/classifications/icd/COVID-19-coding-icd10.pdf?ua=1"}]},{"name":"patient_PII","description":"Personally identifiable information about a patient.","parent":"patient","fields":[{"name":"patient_id","valueType":"ID","description":"Unique identifier of the patient.","required":"required"},{"name":"family_name","description":"The part of a name that links to the genealogy.","valueType":"string"},{"name":"given_name(s)","description":"Given names (not always \'first\'). Includes middle names.","valueType":"string"},{"name":"address_line","description":"This component contains the house number, apartment number, street name, street direction, P.O. Box number, delivery hints, and similar address information.","valueType":"string"},{"name":"address_city","description":"The name of the city, town, suburb, village or other community or delivery center.","valueType":"string"},{"name":"address_state","description":"US 2 letter state code.","valueType":"string"},{"name":"primary_phone_number","description":"Preferred phone number for the patient.","valueType":"string"}]},{"name":"condition","description":"The collection of data elements related to a condition. A condition can be either a diagnosis or part of an ongoing problem list.","parent":"patient","fields":[{"name":"condition_id","valueType":"ID","description":"Unique identifier assigned to this instance of condition in the patient.","required":"required"},{"name":"patient_id","valueType":"ID","description":"Unique identifier of the patient.","required":"required"},{"name":"code","valueType":"code","description":"The code to represent the condition, diagnosis or problem.","required":"required","permissible":{"codeList":["ICD-10-CM code","SNOMED CT disorder code"]},"notes":"This field accepts either ICD-10-CM or SNOMED-CT disorder codes."},{"name":"category","description":"Condition category which distinguishes between a diagnosis or a problem.","permissible":{"codeList":["problem-list-item","encounter-diagnosis"]},"valueType":"code","notes":"Include all codes defined in http://terminology.hl7.org/CodeSystem/condition-category.\\n"},{"name":"recorded_date","description":"The date that the condition was recorded.","required":"required","valueType":"date","notes":"This is different from the condition onset date which could be a period of time prior to the date recorded by the provider."},{"name":"onset_date","description":"An estimate or actual date that the patient reported experiencing the condition.","required":"required","valueType":"date"},{"name":"verification_date","description":"Date when condition was confirmed by positive test, imaging, biopsy, or other method.","required":"optional","valueType":"date"},{"name":"clinical_status","description":"The clinical status of the condition. (Reference source: FHIR Condition clinical status from http://hl7.org/fhir/condition-definitions.html#Condition.clinicalStatus).","valueType":"code","required":"required","permissible":{"codeList":["active","recurrence","relapse","inactive","remission","resolved"]},"notes":"The clinical status terms are described at http://hl7.org/fhir/valueset-condition-clinical.html."}]},{"name":"med_exposure","description":"An instance of a medication or substance introduced into the body. Medication exposures provide uniform format for medication orders, medication list, and medication statements for the purposes of reporting.","parent":"patient","fields":[{"name":"med_id","valueType":"ID","description":"Unique identifier assigned to the medication exposure episode.","required":"required"},{"name":"patient_id","valueType":"ID","description":"Unique identifier of the patient.","required":"required"},{"name":"code","valueType":"code","description":"The code to represent the medication that was administered.","required":"required","permissible":{"codeList":["RxNorm code: http://www.nlm.nih.gov/research/umls/rxnorm","NDC code: http://hl7.org/fhir/sid/ndc"]},"notes":"Medications can be reported in NDC or RxNorm. For NDC, the product code or package code is acceptable. For RxNorm, the ingredient  (IN) or multiple ingredient (MIN) codes are preferred over the brand codes or combination (Ingredient + Strength (SCDC), Ingredient + Dose Form (SCDF), etc.)."},{"name":"med_dose_quantity","description":"The amount of the medication given at one administration event.","valueType":"quantity"},{"name":"med_dose_units","description":"Unit of measure for the dose quantity of the administered medication.","valueType":"code","permissible":{"codeList":["UCUM code"]},"notes":"Nomenclature conforms to the Unified Code for Units of Measure (UCUM): https://unitsofmeasure.org/trac"},{"name":"med_route","description":"The path of the substance into the body for the administered medication.","permissible":{"codeList":["Include codes from http://snomed.info/sct  where concept is-a 284009009 (Route of administration values)"]},"valueType":"code"},{"name":"med_frequency","description":"The timing for the frequency that the medication was taken.","valueType":"string","notes":"Frequency should be reported as a string instead of a complex data structure to simplify the collection of data."},{"name":"med_start_date","description":"The date when the medication was started.","required":"required","valueType":"date"},{"name":"med_stop_date","description":"The date when the medication as administered to the patient.","required":"required","valueType":"date","note":"If the stop date is not provided, it is assumed the medication is ongoing at the time of the report."}]},{"name":"procedure","description":"An action that was performed on or for a patient. This can be a physical intervention like an operation, or less invasive services such as counseling.","parent":"patient","fields":[{"name":"procedure_id","valueType":"ID","description":"Unique identifier assigned to the procedure occurrence.","required":"required"},{"name":"patient_id","valueType":"ID","description":"Unique identifier of the patient.","required":"required"},{"name":"code","description":"The code representing the procedure. A procedure is an action performed on a patient, including diagnostic tests, therapies - such as respiratory therapy, surgeries, and other clinical interventions.","required":"required","valueType":"code","notes":"SNOMED CT (preferred), ICD-10-CM (preferred) or HCPCS (alternative)."},{"name":"status","description":"The status of the procedure in terms of workflow.","required":"required","permissible":{"codeList":["in-progress","aborted","completed","entered-in-error"]},"valueType":"code"},{"name":"start_date","description":"The date and time the procedure started.","required":"required","valueType":"date"},{"name":"end_date","description":"The date and time the procedure ended.","required":"optional","valueType":"date"}]},{"name":"lab_result","description":"An individual laboratory test and result value","parent":"patient","fields":[{"name":"lab_result_id","description":"Unique identifier of the lab test.","required":"required","valueType":"ID"},{"name":"patient_id","valueType":"ID","description":"Unique identifier of the patient.","required":"required"},{"name":"code","valueType":"code","description":"The code identifying the type of lab test performed.","required":"required","permissible":{"codeList":["LOINC code"]},"notes":"LOINC is preferred as the coding system for the lab test. In cases where there is a no LOINC code immediately available, a local test code would be accepted provided that there is a code system listing where the code originated."},{"name":"recorded_date","valueType":"date","description":"The date when the lab result was recorded."},{"name":"result_code","description":"The value associated with a lab result, represented as a code.","valueType":"code","notes":"A lab result can have many variations of data_types. The implementer should only select one type of lab_result_value associated with each lab result."},{"name":"result_quantity","description":"The value associated with a lab result, represented as a number. The number can be either an integer or a float.","valueType":"quantity","notes":"A lab result can have many variations of data_types. The implementer should only select one type of lab_result_value associated with each lab result."},{"name":"result_units","description":"Unit of measure for the associated with the lab result quantity.","valueType":"code","permissible":{"codeList":["UCUM code"]},"notes":"Nomenclature conforms to the Unified Code for Units of Measure (UCUM): https://unitsofmeasure.org/trac"},{"name":"lab_result_interpretation","description":"An interpretation associated with the lab test result","valueType":"code","permissible":{"codeList":["Any of the codes specified in the http://terminology.hl7.org/CodeSystem/v3-ObservationInterpretation value set."]}}]},{"name":"encounter","description":"Data elements associated with an encounter at a health care facility, such as an ambulatory visit, an emergency department visit, or a hospitalization.","parent":"patient","fields":[{"name":"encounter_id","description":"A unique identifier for the encounter.","required":"required","valueType":"ID"},{"name":"patient_id","valueType":"ID","description":"Unique identifier of the patient.","required":"required"},{"name":"facility_id","valueType":"ID","description":"Unique identifier of the facility providing the encounter.","required":"optional"},{"name":"encounter_class","description":"A classification of the encounter, e.g. ambulatory, emergency or inpatient","required":"required","valueType":"code","permissible":{"codeList":["AMB (ambulatory)","EMER (emergency)","FLD (field)","HH (home health)","IMP (inpatient encounter)","ACUTE (inpatient acute)","NONAC (inpatient non-acute)","OBSENC (observation encounter)","PRENC (pre-admission)","SS (short stay)","VR (virtual)"]},"notes":"Permissible values descriptions are available at http://hl7.org/fhir/v3/ActEncounterCode/vs.html."},{"name":"admission_date","description":"The date the patient was admitted for the encounter","required":"required","valueType":"date"},{"name":"admission_source","description":"The type of location the patient originated from.","required":"optional","valueType":"code","permissible":{"codeList":["Any of the codes specified in the http://terminology.hl7.org/CodeSystem/admit-source value set"]},"notes":"Definitions for the permissible values are available at http://hl7.org/fhir/codesystem-encounter-admit-source.html."},{"name":"discharge_date","description":"The date the patient was discharged from the encounter","required":"required","valueType":"date"},{"name":"discharge_disposition","description":"Categorization of the status of the patient at discharge according to the type of location the patient was discharged to.","valueType":"code","required":"required","permissible":{"codeList":["home (Home)","alt-home (Alternative home)","other-hcf (Other healthcare facility)","hosp (Hospice)","long (Long-term care)","aadvice (Left against advice)","exp (Expired)","psy (Psychiatric hospital)","rehab (Rehabilitation)","snf (Skilled nursing facility)","other (Other)"]},"notes":"Definitions for the permissible values are available at https://www.hl7.org/fhir/valueset-encounter-discharge-disposition.html"},{"name":"initial_diagnosis","description":"The initial working diagnosis (also known as \'chief complaint\') first entered into the EHR","valueType":"code","permissible":{"codeList":["ICD-10-CM code","SNOMED CT code"]}},{"name":"admitting_diagnosis","description":"The main diagnosis code used to admit the patient.","valueType":"code","required":"conditional","permissible":{"codeList":["ICD-10-CM code","SNOMED CT disorder code"]},"notes":"An admitting diagnosis is only expected to be available for inpatient encounters."},{"name":"discharge_diagnosis","description":"The final diagnosis determined to be the main cause for the hospitalization after all testing, surgery, and workup are complete.","valueType":"code","required":"conditional","permissible":{"codeList":["ICD-10-CM code","SNOMED CT disorder code"]},"notes":"Discharge diagnosis is only expected to be available for inpatient encounters that have been completed."}]},{"name":"encounter_setting","description":"Department, unit or setting the patient visits during the course of an inpatient encounter, such as emergency department or intensive care unit.","parent":"encounter","fields":[{"name":"encounter_id","description":"A unique identifier for the encounter.","required":"required","valueType":"ID"},{"name":"encounter_setting_id","description":"A unique identifier for the instance of encounter setting.","required":"required","valueType":"ID"},{"name":"type","description":"The type of setting according to its function/purpose","required":"required","valueType":"code","permissible":{"codeList":["Code from http://terminology.hl7.org/ValueSet/v3-ServiceDeliveryLocationRoleType value set."]},"notes":"Definitions for the permissible values for setting type are available at http://hl7.org/fhir/v3/ServiceDeliveryLocationRoleType/vs.html"},{"name":"arrival_date","description":"The date the patient arrived at the setting.","required":"optional","valueType":"date"},{"name":"departure_date","description":"The date the patient departed the setting.","required":"optional","valueType":"date"},{"name":"length of stay","description":"The length of time a patient spent in the setting.","required":"optional","valueType":"quantity","notes":"Can be derived from arrival and departure dates."}]},{"name":"vitals","description":"Data elements associated with the physiologic measurements of a patient that indicate the status of the body\'s life sustaining functions, also known as vital signs. (Source: United States Core Data for Interoperability (USCDI). https://www.healthit.gov/isa/united-states-core-data-interoperability-uscdi)","parent":"patient","fields":[{"name":"vital_id","valueType":"ID","description":"Unique identifier assigned to the vital sign measurement.","required":"required"},{"name":"patient_id","valueType":"ID","description":"Unique identifier of the patient.","required":"required"},{"name":"code","valueType":"code","description":"A code for the vital sign of interest, e.g. heart rate.","required":"required","permissible":{"codeList":["LOINC code"]}},{"name":"value","valueType":"quantity","description":"The result of measuring the vital sign.","required":"required"},{"name":"unit","valueType":"string","description":"The unit for the measured vital sign value.","required":"required","permissible":{"codeList":["UCUM code"]},"notes":"Units associated with each of the permissible vital sign codes are listed in http://hl7.org/fhir/R4/observation-vitalsigns.html"},{"name":"measurement_date","valueType":"date","description":"The date and time the measurement of the vital sign occurred.","required":"required"}]},{"name":"patient_observation","description":"Clinical information obtained through examination, assessment, survey, or questioning.","parent":"patient","fields":[{"name":"observation_id","description":"Unique identifier of the observation.","required":"required","valueType":"ID"},{"name":"patient_id","valueType":"ID","description":"Unique identifier of the patient.","required":"required"},{"name":"code","valueType":"code","description":"The code identifying the type of observation.","required":"required","permissible":{"codeList":["LOINC code"]},"notes":"LOINC is preferred as the coding system for the lab test. In cases where there is a no LOINC code immediately available, a local test code would be accepted provided that there is a code system listing where the code originated."},{"name":"observation_datetime","valueType":"dateTime","description":"The date-time of the observation, if the observation is made at a specific time.","note":"Either the observation_datetime or the observation_period_start should be reported, but not both."},{"name":"observation_period_start","valueType":"dateTime","description":"The date or date-time marking the beginning of the clinically-relevant time period of the observation.","note":"Either the observation_datetime or the observation_period_start should be reported, but not both."},{"name":"observation_period_end","valueType":"dateTime","description":"The date or date-time marking end of the observation period. If the observation_period_start is reported and the observation_period_end is not reported, the observation is assumed to be ongoing at the time of reporting."},{"name":"result_string","description":"The value associated with the observation, represented as a text.","valueType":"text","notes":"A textual description of the observation result. A code is preferred if available."},{"name":"result_code","description":"The value associated with the observation, represented as a code.","valueType":"code"},{"name":"result_quantity","description":"The value associated with a lab result, represented as a number. The number can be either an integer or a float.","valueType":"quantity"},{"name":"result_units","description":"Unit of measure for the associated with the lab result quantity.","valueType":"code","permissible":{"codeList":["UCUM code"]},"notes":"Nomenclature conforms to the Unified Code for Units of Measure (UCUM): https://unitsofmeasure.org/trac"},{"name":"result_interpretation","description":"An interpretation associated with the observation","valueType":"code","permissible":{"codeList":["Any of the codes specified in the http://terminology.hl7.org/CodeSystem/v3-ObservationInterpretation value set."]}}]},{"name":"group","description":"A specific sub-population or cohort with common characteristics.","parent":"root","fields":[{"name":"group_id","valueType":"ID","description":"The id of the group definition.","required":"required"},{"name":"description","description":"A narrative explanation of the composition of the group.","valueType":"text","required":"required"},{"name":"managing_organization_id","description":"The lead organization responsible for the group.","valueType":"ID"},{"name":"managing_practitioner_id","description":"The lead practitioner responsible for the group.","valueType":"ID"}]},{"name":"group_member","description":"A specific sub-population or cohort with common characteristics.","parent":"group","fields":[{"name":"group_member_id","valueType":"ID","description":"Unique identifier assigned to patient in the context of the group or cohort, for example, ","required":"required"},{"name":"patient_id","valueType":"ID","description":"Unique identifier of the person included in the group.","required":"optional","note":"Including the patient_id does not imply PII of the patient is revealed."},{"name":"group_id","valueType":"ID","description":"The id of the group definition.","required":"required"},{"name":"description","description":"A narrative explanation of the composition of the group.","valueType":"text","required":"required"},{"name":"member_start_date","description":"The date when the member was included in the group.","required":"required","valueType":"date"},{"name":"member_end_date","description":"The date when the member no longer was included in the group.","required":"optional","valueType":"date","note":"If no end date is given, it is assumed the person is still a member of the group on the report date."}]},{"name":"facility","description":"An institution (physical or organizational) where healthcare is delivered.","parent":"root","fields":[{"name":"facility_id","description":"Unique identifier of the facility.","required":"required","valueType":"ID"},{"name":"facility_name","description":"Name of the facility.","required":"required","valueType":"string"},{"name":"location_id","description":"Identifier of the physical location of the facility.","valueType":"ID"}]},{"name":"measure_result","description":"A result of measuring a characteristic of the group, facility, organization, or jurisdiction.","parent":"measure","fields":[{"name":"measure_result_id","description":"Unique identifier of the measure instance.","required":"required","valueType":"ID"},{"name":"measure_id","description":"A code or identifier of the definition of measure reported.","valueType":"ID","note":"Either measure ID or code should be provided."},{"name":"code","valueType":"code","description":"The code identifying the type of observation made on individuals in a population.","permissible":{"codeList":["LOINC","SNOMED-CT","CPT","RxNORM","NDC"]},"notes":"Codes should be reflect codes for observations on individuals. For example, the incidence of fever in a group should use the code SNOMED 426000000 (Fever greater than 100.4 Fahrenheit). The incidence of intubation in the group would use the SNOMED or CPT procedure code for intubation."},{"name":"measure_name","description":"The name of the measure or measure definition reported.","valueType":"string","note":"Either the name or the ID of the measure should be provided."},{"name":"measure_subject_id","description":"Unique identifier of the group, provider, facility, or jurisdiction that the measure relates to.","required":"required","valueType":"ID"},{"name":"measure_datetime","valueType":"dateTime","description":"The time of the measure, if observed or calculated at a specific time."},{"name":"measure_period_start","valueType":"dateTime","description":"The date or date-time marking the beginning of the clinically-relevant time period of the measure.","note":"Either the measure_datetime or the measure_period_start should be reported, but not both."},{"name":"measure_period_end","valueType":"dateTime","description":"The date or date-time marking end of the measure period. If the measure_period_start is reported and the measure_period_end is not reported, the measure is assumed to be ongoing at the time of reporting."},{"name":"result_quantity","description":"The value associated with the measure, represented as a number. The number can be either an integer or a float.","valueType":"quantity"},{"name":"result_units","description":"Unit of measure for the associated with the lab result quantity.","valueType":"code","permissible":{"codeList":["UCUM code"]},"notes":"Nomenclature conforms to the Unified Code for Units of Measure (UCUM): https://unitsofmeasure.org/trac"},{"name":"result_numerator","description":"The numerator value associated with a ratio observation, represented as an integer.","valueType":"integer"},{"name":"result_denominator","description":"The denominator value associated with a ratio observation, represented as an integer.","valueType":"integer"}]},{"name":"measure","description":"A specific metric or measurement.","parent":"root","fields":[{"name":"measure_id","description":"Unique identifier of the measure.","required":"required","valueType":"ID"},{"name":"measure_name","description":"The name of the measure defined.","valueType":"string"},{"name":"measure_description","description":"Description of the measure.","valueType":"string"},{"name":"last_changed","valueType":"date","description":"The date the measure definition was last changed.","required":"required"},{"name":"scoring","valueType":"code","description":"The way the measure is scored.","permissible":{"codeList":["proportion","ratio","continuous variable","cohort"]}},{"name":"inclusion_definition","valueType":"string","description":"Refers to the initial set of patients, facilities, or events to be evaluated by a measure."},{"name":"denominator_definition","valueType":"string","description":"The lower portion of a fraction used to calculate a rate, proportion, or ratio. The denominator can be the same as the inclusion, or a subset of the inclusions to further constrain the population for the purpose of the measure."},{"name":"numerator_definition","valueType":"string","description":"The upper portion of a fraction used to calculate a rate, proportion, or ratio. Also called the measure focus, it is the target process, condition, event, or outcome. Numerator criteria are the processes or outcomes expected for item defined in the denominator."},{"name":"measure_population","valueType":"string","description":"Measure population criteria define the patients or events for which the individual observation for the measure should be taken. Measure populations are used for continuous variable measures rather than numerator and denominator criteria."}]}],"updatedAt":"2020-04-10T16:57:21.727Z"},"versions":["2.62","2.6","2.40"],"currentVersion":"2.62"}')},762:function(e){e.exports=JSON.parse('{"name":"root","fields":[{"name":"reported_date","required":"optional"},{"name":"reporter_organization_id","required":"optional"},{"name":"reporter_practitioner_id","required":"optional"}],"required":"optional","parentName":"","children":[{"name":"patient","fields":[{"name":"patient_id","required":"required"},{"name":"date_of_birth","required":"optional"},{"name":"administrative_gender","required":"required"},{"name":"race","required":"optional"},{"name":"ethnicity","required":"optional"},{"name":"zip_code","required":"required"}],"required":"optional","parentName":"root","children":[{"name":"Vital_status","fields":[{"name":"patient_id","required":"required"},{"name":"vital_status","required":"required"},{"name":"cause_of_death","required":"conditional"}],"required":"optional","parentName":"patient","children":[]},{"name":"patient_PII","fields":[{"name":"patient_id","required":"required"},{"name":"family_name","required":"optional"},{"name":"given_name(s)","required":"optional"},{"name":"address_line","required":"optional"},{"name":"address_city","required":"optional"},{"name":"address_state","required":"optional"},{"name":"primary_phone_number","required":"optional"}],"required":"optional","parentName":"patient","children":[]},{"name":"condition","fields":[{"name":"condition_id","required":"required"},{"name":"patient_id","required":"required"},{"name":"code","required":"required"},{"name":"category","required":"optional"},{"name":"recorded_date","required":"required"},{"name":"onset_date","required":"required"},{"name":"verification_date","required":"optional"},{"name":"clinical_status","required":"required"}],"required":"optional","parentName":"patient","children":[]},{"name":"med_exposure","fields":[{"name":"med_id","required":"required"},{"name":"patient_id","required":"required"},{"name":"code","required":"required"},{"name":"med_dose_quantity","required":"optional"},{"name":"med_dose_units","required":"optional"},{"name":"med_route","required":"optional"},{"name":"med_frequency","required":"optional"},{"name":"med_start_date","required":"required"},{"name":"med_stop_date","required":"required"}],"required":"optional","parentName":"patient","children":[]},{"name":"procedure","fields":[{"name":"procedure_id","required":"required"},{"name":"patient_id","required":"required"},{"name":"code","required":"required"},{"name":"status","required":"required"},{"name":"start_date","required":"required"},{"name":"end_date","required":"optional"}],"required":"optional","parentName":"patient","children":[]},{"name":"lab_result","fields":[{"name":"lab_result_id","required":"required"},{"name":"patient_id","required":"required"},{"name":"code","required":"required"},{"name":"recorded_date","required":"optional"},{"name":"result_code","required":"optional"},{"name":"result_quantity","required":"optional"},{"name":"result_units","required":"optional"},{"name":"lab_result_interpretation","required":"optional"}],"required":"optional","parentName":"patient","children":[]},{"name":"encounter","fields":[{"name":"encounter_id","required":"required"},{"name":"patient_id","required":"required"},{"name":"facility_id","required":"optional"},{"name":"encounter_class","required":"required"},{"name":"admission_date","required":"required"},{"name":"admission_source","required":"optional"},{"name":"discharge_date","required":"required"},{"name":"discharge_disposition","required":"required"},{"name":"initial_diagnosis","required":"optional"},{"name":"admitting_diagnosis","required":"conditional"},{"name":"discharge_diagnosis","required":"conditional"}],"required":"optional","parentName":"patient","children":[{"name":"encounter_setting","fields":[{"name":"encounter_id","required":"required"},{"name":"encounter_setting_id","required":"required"},{"name":"type","required":"required"},{"name":"arrival_date","required":"optional"},{"name":"departure_date","required":"optional"},{"name":"length of stay","required":"optional"}],"required":"optional","parentName":"encounter","children":[]}]},{"name":"vitals","fields":[{"name":"vital_id","required":"required"},{"name":"patient_id","required":"required"},{"name":"code","required":"required"},{"name":"value","required":"required"},{"name":"unit","required":"required"},{"name":"measurement_date","required":"required"}],"required":"optional","parentName":"patient","children":[]},{"name":"patient_observation","fields":[{"name":"observation_id","required":"required"},{"name":"patient_id","required":"required"},{"name":"code","required":"required"},{"name":"observation_datetime","required":"optional"},{"name":"observation_period_start","required":"optional"},{"name":"observation_period_end","required":"optional"},{"name":"result_string","required":"optional"},{"name":"result_code","required":"optional"},{"name":"result_quantity","required":"optional"},{"name":"result_units","required":"optional"},{"name":"result_interpretation","required":"optional"}],"required":"optional","parentName":"patient","children":[]}]},{"name":"group","fields":[{"name":"group_id","required":"required"},{"name":"description","required":"required"},{"name":"managing_organization_id","required":"optional"},{"name":"managing_practitioner_id","required":"optional"}],"required":"optional","parentName":"root","children":[{"name":"group_member","fields":[{"name":"group_member_id","required":"required"},{"name":"patient_id","required":"optional"},{"name":"group_id","required":"required"},{"name":"description","required":"required"},{"name":"member_start_date","required":"required"},{"name":"member_end_date","required":"optional"}],"required":"optional","parentName":"group","children":[]}]},{"name":"facility","fields":[{"name":"facility_id","required":"required"},{"name":"facility_name","required":"required"},{"name":"location_id","required":"optional"}],"required":"optional","parentName":"root","children":[]},{"name":"measure","fields":[{"name":"measure_id","required":"required"},{"name":"measure_name","required":"optional"},{"name":"measure_description","required":"optional"},{"name":"last_changed","required":"required"},{"name":"scoring","required":"optional"},{"name":"inclusion_definition","required":"optional"},{"name":"denominator_definition","required":"optional"},{"name":"numerator_definition","required":"optional"},{"name":"measure_population","required":"optional"}],"required":"optional","parentName":"root","children":[{"name":"measure_result","fields":[{"name":"measure_result_id","required":"required"},{"name":"measure_id","required":"optional"},{"name":"code","required":"optional"},{"name":"measure_name","required":"optional"},{"name":"measure_subject_id","required":"required"},{"name":"measure_datetime","required":"optional"},{"name":"measure_period_start","required":"optional"},{"name":"measure_period_end","required":"optional"},{"name":"result_quantity","required":"optional"},{"name":"result_units","required":"optional"},{"name":"result_numerator","required":"optional"},{"name":"result_denominator","required":"optional"}],"required":"optional","parentName":"measure","children":[]}]}]}')}}]);